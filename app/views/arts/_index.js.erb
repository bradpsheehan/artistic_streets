<div class="row">
  <div class="large-9 columns">
    <%= text_field_tag 'location', nil, placeholder: "#{t('placeholders.map_search')}", id: "address" %>
  </div>
  <div class="large-3 columns">
    <%= link_to "#{t('nav.find')}", "#", id: "go-to-address", class: "custom-button" %>
    <br/>
  </div>
</div>
<div class="row">
  <div class="large-12 large-centered columns">
    <div id="map_canvas"></div>
  </div>
</div>
<div class="reveal-modal" id="myModal">
  <%= render template: "arts/new" %>
  <a class="close-reveal-modal">Ã—</a>
</div>
<script id="sidebar-template" type="text/x-handlebars-template">
  <h4>
    <em>#{t('headings.art_title')}</em>
    {{ art.title }}
  </h4>
  <h5>
    <em>#{t('headings.art_artist')}</em>
    {{ art.artist }}
  </h5>
  <p id="art-comment">
    <em>#{t('headings.art_comment')}</em>
    {{ art.comment }}
  </p>
  <div id="add-photo-form">
    <h5>#{t('headings.add_photo')}</h5>
    <form action="/images" enctype="multipart/form-data" method="post">
      <input id="add-photo-image" name="image" type="file"></input>
      <input id="add-photo-artid" name="art_id" type="hidden" value="{{ art.id }}"></input>
      <input id="add-photo" type="submit"></input>
    </form>
  </div>
  <div class="image_carousel">
    <ul id="carousel"></ul>
    <div class="clearfix"></div>
    <div id="carousel-buttons">
      <a class="prev custom-button" href="#" id="art-prev">prev</a>
      <a class="next custom-button" href="#" id="art-next">next</a>
    </div>
  </div>
</script>

<script>
  var map;
  var geocoder;

  function initialize() {
    var artObjects = <%= art_objects(@arts).to_json %>;
    geocoder = new google.maps.Geocoder();

    var mapCenterLat = <%= @center_point[:lat] %>;
    var mapCenterLong = <%= @center_point[:long] %>;
    var myLatlng = new google.maps.LatLng(mapCenterLat, mapCenterLong);
    var mapOptions = {
      zoom: <%= @zoom_level %>,
      center: myLatlng,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };

    map = new google.maps.Map(document.getElementById('map_canvas'),
        mapOptions);

    var GeoMarker = new GeolocationMarker(map);

    markersArray = [];

    for (var i = 0; i < artObjects.length; i++) {
      var art = artObjects[i];

      var pinColor = "2980b9";
      var pinColor2 = "65ba4a";
      var pinImage = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|" + pinColor,
        new google.maps.Size(21, 34),
        new google.maps.Point(0,0),
        new google.maps.Point(10, 34));
      var pinImage2 = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=%E2%80%A2|" + pinColor2,
        new google.maps.Size(50, 75),
        new google.maps.Point(0,0),
        new google.maps.Point(10, 34));

      var pinShadow = new google.maps.MarkerImage("http://chart.apis.google.com/chart?chst=d_map_pin_shadow",
        new google.maps.Size(40, 37),
        new google.maps.Point(0, 0),
        new google.maps.Point(12, 35));

      var marker = new google.maps.Marker({
           position: new google.maps.LatLng(art.lat, art.long),
           map: map,
           url: "#sidebar",
           icon: pinImage,
           shadow: pinShadow,
           title: art.title,
           art_id: art.id,
           optimized: false,
           art: art
       });

      google.maps.event.addListener(marker, 'click', function() {
        populateSideBar(this.art_id);
        resetMarkerIcons();
        saveIconState(this);
        this.setIcon(pinImage2);
        if(window.innerWidth < 768) {
          $('.off-canvas').addClass("off-canvas active");
          $('#sidebarButton').remove();
          $('.close-sidebar').append("<a id='sidebarButton' class='sidebar-button custom-button-small' href='#sidebar'>< <</a>");
          $('#sidebarButton').on('click', function() {
            $('body').toggleClass('active');
          });
        }
      });

      var files = [];
      markersArray.push(marker)
    };
    var markerCluster = new MarkerClusterer(map, markersArray);

    function resetMarkerIcons() { for (var i = 0; i < markersArray.length; i++) { markersArray[i].setIcon(pinImage); } };
    function saveIconState(marker) { clickedMarkerTitle = marker.title; };
  }

  google.maps.event.addDomListener(window, 'load', initialize);

</script>
