<div id="map"></div>

<div class="js-menu sliding-menu-content" id="sidebar">
    <div class="js-menu-collapse">X</div>
    <div class="side-content"></div>
</div>

<script id="sidebar-template" type="text/x-handlebars-template">
    <div class="image_carousel">
        <ul id="carousel"></ul>
        <div class="clearfix"></div>
        <div id="carousel-buttons">
          <a class="prev custom-button" href="#" id="art-prev">prev</a>
          <a class="next custom-button" href="#" id="art-next">next</a>
        </div>
    </div>

    <div id="add-photo-form">
        <h5><%= t('headings.add_photo') %></h5>
        <form action="/images" enctype="multipart/form-data" method="post">
            <input id="add-photo-image" name="image" type="file"></input>
            <input id="add-photo-artid" name="art_id" type="hidden" value="{{ art.id }}"></input>
            <input id="add-photo" type="submit"></input>
        </form>
    </div>
</script>

<script src='//api.tiles.mapbox.com/mapbox.js/plugins/leaflet-markercluster/v0.4.0/leaflet.markercluster.js'></script>
<script src='//api.tiles.mapbox.com/mapbox.js/plugins/leaflet-draw/v0.2.2/leaflet.draw.js'></script>
<script>
  L.mapbox.accessToken = 'pk.eyJ1IjoiYnJhZHBzaGVlaGFuIiwiYSI6IlhSYU8zcWcifQ.HNs7CuW_wsM8hxA3gJ5ZpQ';
</script>
<script>
  var artObjects = <%= art_objects(@arts).to_json.html_safe %>;
  var mapCenterLat = <%= @center_point[:lat] %>;
  var mapCenterLong = <%= @center_point[:long] %>;
  var zoomLevel = <%= @zoom_level %>;
  var map = L.mapbox.map('map', 'bradpsheehan.jbp1kgei', {zoomControl: false})
      .setView([mapCenterLat, mapCenterLong], zoomLevel);
  var zoomControls = new L.Control.Zoom({position: 'topright'}).addTo(map);
  var geoCoderControls = new L.mapbox.geocoderControl('bradpsheehan.jbp1kgei', {position: 'topright'}).addTo(map);
  var featureGroup = L.featureGroup().addTo(map);
  var drawControl = new L.Control.Draw({
      position: 'topright',
      edit: {
        featureGroup: featureGroup
      }
    }).addTo(map);

    map.on('draw:created', function(e) {
        featureGroup.addLayer(e.layer);
    });
  var markers = new L.MarkerClusterGroup();

  for (var i = 0; i < artObjects.length; i++) {
    var art = artObjects[i];
    var marker = L.mapbox.markerLayer({
      type: 'Feature',
      geometry: {
          type: 'Point',
          coordinates: [parseFloat(art["long"]), parseFloat(art["lat"])]
      },
      properties: {
          'marker-size': 'large',
          'marker-color': '#008CFF',
          'url': '#sidebar',
          'art_id': art.id,
          'art': art
      }
    });

    marker.on('click', function(e){
      $('.js-menu').removeClass('is-visible').addClass('is-visible');
      populateSideBar(e.layer.feature.properties['art_id']);
    });
    markers.addLayer(marker);
  }
  map.addLayer(markers);
</script>
